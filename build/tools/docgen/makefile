#******************************************************************************
#   Copyright (c) 2010 Zoran Corporation.
#   $Header: //depot/imgeng/sw/inferno/appsrc/build/tools/docgen/makefile#2 $
#   $Change: 152022 $ $Date: 2010/02/10 $
#******************************************************************************

# tell template.mak we want to build an executable for the build platform
# not a target board/cpu
#
BUILD_TYPE=HostExecutable

# defining a ROOT only if not defined already lets this tool build 
# alone (not part of a larger make).
#
ROOT	?=	../../..

# list the sources needed to make the exec. adding the text file
# lets it be included in tarfiles generated by "make devtar", etc.
#
SOURCES	=	docgen.c docgen.css

# add the header we need to generate to GENERATE which makes it a dependancy of All:
# and lets the regular "clean" target remove it
#
GENERATE=	gencss.h gendoxy.h

# include the standard make rules and things
#
include $(ROOT)/build/template.mak

# add a rule to make the generated header from the css file in the source directory
# but only do the work if not "make clean"
#
gencss.h: $(SRCDIR)/docgen.css
ifeq (,$(findstring clean,$(MAKECMDGOALS)))
	@ echo Generating $@ from $<
	@ $(BIN2C) -n gencss $< > $@
endif

# and the generated doxygen config template
#
gendoxy.h: $(SRCDIR)/doxyfig.txt
ifeq (,$(findstring clean,$(MAKECMDGOALS)))
	@ echo Generating $@ from $<
	@ $(BIN2C) -n gendoxy $< > $@
endif

# also, if not cleaning, make the final dependancy chain depend on "tools" which is
# a psuedo target in template.mak that builds BIN2C and other tools needed to build
#
ifeq (,$(findstring clean,$(MAKECMDGOALS)))
$(SRCDIR)/docgen.css: tools	
$(SRCDIR)/doxyfig.txt: tools	
endif

